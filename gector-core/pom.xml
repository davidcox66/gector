<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <parent>
        <groupId>org.gector</groupId>
        <artifactId>gector-parent</artifactId>
        <version>1.0-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>
  
    <modelVersion>4.0.0</modelVersion>
    <artifactId>gector-core</artifactId>
    <packaging>jar</packaging>
    <name>gector-core</name>
   
  <properties>
  </properties>

  <build>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <includes>
          <include>**/*.properties</include>
        </includes>
        <filtering>true</filtering>
      </resource>
      <resource>
        <directory>src/main/resources</directory>
        <includes>
        </includes>
        <filtering>false</filtering>
      </resource>
    </resources>
    <testResources>
      <testResource>
        <directory>src/test/resources</directory>
        <includes>
          <include>**/*.properties</include>
        </includes>
        <filtering>true</filtering>
      </testResource>
      <testResource>
        <directory>src/test/resources</directory>
        <includes>
          <include>**/*.xls</include>
          <include>**/*.yaml</include>
        </includes>
        <filtering>false</filtering>
      </testResource>
    </testResources>
    
	  <plugins>
			<plugin>
    		<groupId>org.codehaus.gmaven</groupId>
      	<artifactId>gmaven-plugin</artifactId>
      </plugin>
  	
  	<plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <forkMode>pertest</forkMode> <!-- this is what triggers the problem, having it to "never" works also -->
          <systemProperties>
            <property>
              <name>log4j.configuration</name>
              <value>file:target/test-classes/log4j.properties</value>
            </property>
          <!--
            <property>
              <name>log4j.debug</name>
              <value>true</value>
            </property>
          -->
          </systemProperties>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <executions>
          <execution>
            <id>standalone-distro</id>
            <phase>install</phase>
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <descriptors>
            <descriptor>${basedir}/src/main/resources/assemblies/standaloneAssembly.xml</descriptor>
          </descriptors>
        </configuration>
      </plugin>
  	</plugins>
  </build>

  <!-- ==================== -->
  <!-- Project dependencies -->
  <!-- ==================== -->
  <dependencies>
  	<!-- For some reason, Hector's Perf4j wants to pull in the real log4j -->
  	<!-- 
    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
      <scope>test</scope> 
    </dependency>
    --> 
    <dependency>
	   	<groupId>org.gector</groupId>
	   	<artifactId>gector-logging</artifactId>
	   	<version>1.0-SNAPSHOT</version>
    </dependency>
    <dependency>
		<groupId>org.gector</groupId>
		<artifactId>gector-cassandra</artifactId>
		<version>1.0-SNAPSHOT</version>
		<type>pom</type>
    </dependency> 
	<dependency>
		<groupId>junit</groupId>
		<artifactId>junit</artifactId>
	</dependency>
    <dependency>
	  	<groupId>org.codehaus.gmaven.runtime</groupId>
		<artifactId>gmaven-runtime-${groovy.runtime.version}</artifactId>
	</dependency>
    <dependency>
        <groupId>org.apache.poi</groupId>
        <artifactId>poi</artifactId>
    </dependency>
    <dependency>
	  	<groupId>org.apache.ivy</groupId>
	    <artifactId>ivy</artifactId>
	    <!-- 
	    	Really only needed at test scope here but POMs that are dependent on this at test scope
	    	will get this dependency dropped if it is at test scope
	    	
	    <scope>test</scope>
	    -->
	  </dependency>
	 
	  <!-- 
    <dependency>
    	<groupId>org.springframework</groupId>
      <artifactId>spring-core</artifactId>
      <scope>test</scope>
    </dependency>
  	-->
  	<!-- 
    <dependency>
      <groupId>com.springsource.instrumented</groupId>
      <artifactId>org.springframework.core.instrumented</artifactId> 
    </dependency>
    --> 
  </dependencies>

</project>
